<%
  # Note: this is a .json.erb file. So we evaluate it with Erb, which results
  # in JSON. If you've used Erb in Rails' database.yml, this is basically the
  # same thing.

  # Here, we get to run appropriate Ruby code of whatever kind we like.  For
  # instance, anything you've put into ~/.deploy_credentials is fair game for
  # loading. You may want your passwords there!

  # Keep in mind that this code loads in both Capistrano and Chef.  Try not to
  # put in Cap-specific code (fails in Chef) or Chef-specific code (fails in
  # Capistrano.) When in doubt, create a new Vagrant VM from scratch using
  # both Chef and Capistrano as a test.

  # As an example, we generate a SECRET_KEY_BASE here, which can be used
  # for your various apps if it doesn't already exist.

  home_dir = ENV['HOME'] || ENV['userdir'] || "/home/#{ENV['USER']}"
  filename = File.join(home_dir, ".deploy_credentials", "rails_app_secret_keys.json")
  if File.exist? filename
    secret_keys = JSON.parse(File.read filename)
  else
    secret_keys = {}
  end
  orig_secret_keys = secret_keys.clone

  # Generate secret keys for any app without them
  secret_keys["rails-devise-pundit"] ||= (0..127).map { (('a'..'f').to_a + ('0'..'9').to_a).sample }.join

  if orig_secret_keys != secret_keys
    File.open(filename, "w") { |f| f.write JSON.dump(secret_keys) }
  end
%>

{
  "ruby_apps": {
    "rails-devise-pundit": {
      "git": "https://github.com/noahgibbs/rails-devise-pundit.git",
      "#db_name": "my_database",
      "#TODO": "more git configuration - see Capistrano files",
      "#TODO": "optionally specify no asset build and/or no migration",
      "user": "www",

      "#": "env_vars is used for app-specific environment variables. They won't be used for configuring the server.",

      "#": "These are insecure right now and must all be changed",
      "env_vars": {
        "ADMIN_NAME": "admin",
        "ADMIN_EMAIL": "admin@no-such-domain.no-such-tld",
        "ADMIN_PASSWORD": "s00p3rs33kr1t",
        "GMAIL_USERNAME": "the.codefolio.guy",
        "GMAIL_PASSWORD": "notMyR34lP455w0rD$",
        "DOMAIN_NAME": "example.com",
        "SECRET_KEY_BASE": <%= secret_keys['rails-devise-pundit'].inspect %>
      },

      "#": "uncomment these to use them",
      "#unicorn_arguments": "arguments passed to unicorn",
      "#log_run_arguments": "arguments passed to svlogd (runit)",
      "#chpst_arguments":   "arguments passed to chpst (runit)",
      "#extra_code":        "bash commands at start of run script (runit)",
      "#extra_log_code":    "bash commands at start of log script (runit)",

      "#": "NGinX lets you specify server names and redirect URLs. Use 'default' to mean just that.",
      "redirect_hostnames": [],
      "server_names": ["default", "rdp.127.0.0.1.xip.io"],

      "#": "An app can list what Ubuntu packages to install. [NOT YET IMPLEMENTED]",
      "packages": []
    }
  },
  "users": {
    "www": {
    }
  },
  "nginx": {
    "#": "See docs at http://community.opscode.com/cookbooks/nginx",
    "version": "1.4.4",
    "sendfile": "off",
    "#TODO": "Move sendfile off into development JSON - it's a Vagrant workaround.",
    "default_site_enabled": false
  },
  "mysql": {
    "#": "See http://community.opscode.com/cookbooks/mysql",
    "server_root_password": "iloverandompasswords",
    "allow_remote_root": false
  },
  "rvm": {
    "#": "See https://github.com/fnichol/chef-rvm",
    "rvm": {
      "rvmrc": {
        "rvm_autolibs_flag": "disabled"
      }
    },
    "vagrant": {
        "system_chef_solo": "/opt/vagrant_ruby/bin/chef-solo"
    }
  },
  "run_list": [
    "apt",
    "mysql::client",
    "mysql::server",
    "basic_config",
    "rvm",
    "nginx",
    "rails_server"
  ]
}
